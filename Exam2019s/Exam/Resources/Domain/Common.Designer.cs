//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources.Domain {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Common {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Common() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Domain.Common", typeof(Common).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changed at.
        /// </summary>
        public static string ChangedAt {
            get {
                return ResourceManager.GetString("ChangedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changed by.
        /// </summary>
        public static string ChangedBy {
            get {
                return ResourceManager.GetString("ChangedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created at.
        /// </summary>
        public static string CreatedAt {
            get {
                return ResourceManager.GetString("CreatedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created by.
        /// </summary>
        public static string CreatedBy {
            get {
                return ResourceManager.GetString("CreatedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deleted at.
        /// </summary>
        public static string DeletedAt {
            get {
                return ResourceManager.GetString("DeletedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deleted by.
        /// </summary>
        public static string DeletedBy {
            get {
                return ResourceManager.GetString("DeletedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Access denied!.
        /// </summary>
        public static string ErrorAccessDenied {
            get {
                return ResourceManager.GetString("ErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record data is invalid!.
        /// </summary>
        public static string ErrorBadData {
            get {
                return ResourceManager.GetString("ErrorBadData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Id&apos;s should match!.
        /// </summary>
        public static string ErrorIdMatch {
            get {
                return ResourceManager.GetString("ErrorIdMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is not valid value for {1} field..
        /// </summary>
        public static string ErrorMessage_InvalidValue {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The field {0} must be a string or array type with a maximum length of &apos;{1}&apos;..
        /// </summary>
        public static string ErrorMessage_MaxLength {
            get {
                return ResourceManager.GetString("ErrorMessage_MaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The field {0} must be a string or array type with a minimum length of &apos;{1}&apos;..
        /// </summary>
        public static string ErrorMessage_MinLength {
            get {
                return ResourceManager.GetString("ErrorMessage_MinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The field {0} must be between {1} and {2}..
        /// </summary>
        public static string ErrorMessage_Range {
            get {
                return ResourceManager.GetString("ErrorMessage_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} field is required..
        /// </summary>
        public static string ErrorMessage_Required {
            get {
                return ResourceManager.GetString("ErrorMessage_Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The field {0} must be a string with a maximum length of {1}..
        /// </summary>
        public static string ErrorMessage_StringLengthMax {
            get {
                return ResourceManager.GetString("ErrorMessage_StringLengthMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The field {0} must be a string with a minimum length of {2} and a maximum length of {1}..
        /// </summary>
        public static string ErrorMessage_StringLengthMinMax {
            get {
                return ResourceManager.GetString("ErrorMessage_StringLengthMinMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record was not found!.
        /// </summary>
        public static string ErrorNotFound {
            get {
                return ResourceManager.GetString("ErrorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Translation is required!.
        /// </summary>
        public static string ErrorTranslationRequired {
            get {
                return ResourceManager.GetString("ErrorTranslationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User was not found!.
        /// </summary>
        public static string ErrorUserNotFound {
            get {
                return ResourceManager.GetString("ErrorUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (ID).
        /// </summary>
        public static string Id {
            get {
                return ResourceManager.GetString("Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Master (ID).
        /// </summary>
        public static string MasterId {
            get {
                return ResourceManager.GetString("MasterId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Url to return.
        /// </summary>
        public static string ReturnUrl {
            get {
                return ResourceManager.GetString("ReturnUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record was deleted..
        /// </summary>
        public static string SuccessDeleted {
            get {
                return ResourceManager.GetString("SuccessDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record was restored..
        /// </summary>
        public static string SuccessRestored {
            get {
                return ResourceManager.GetString("SuccessRestored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User.
        /// </summary>
        public static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User (ID).
        /// </summary>
        public static string UserId {
            get {
                return ResourceManager.GetString("UserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role.
        /// </summary>
        public static string UserRole {
            get {
                return ResourceManager.GetString("UserRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role (ID).
        /// </summary>
        public static string UserRoleId {
            get {
                return ResourceManager.GetString("UserRoleId", resourceCulture);
            }
        }
    }
}
